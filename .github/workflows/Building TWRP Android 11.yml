name: TWRP Android 11 Builder

on: # [push]
#  release:
#    types: [published]
#  push:
#    branches:
#      - main
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  watch:
    types: [started]

env:
  MANIFEST: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp -b twrp-11
  DEVICE: HotX573
  DT_LINK: https://github.com/skyhuppa/Infinix_X573 -b twrp-11.0
  DT_PATH: device/infinix/HotX573
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }} 
  TARGET: recoveryimage
  TZ: Africa/Accra

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Checkout
         uses: actions/checkout@v3
         with: 
           path: main
         
       - name: Initializing environment
        run: |
          echo "::group::Install Build Env Tool"
          sudo -E apt-get clean
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install curl libstdc++6 git wget repo rsync aria2
          echo "::endgroup::"
          git config --global user.name "${{github.actor}}"
          git config --global user.email "1844766234@qq.com"
          git clone https://gitlab.com/OrangeFox/misc/scripts.git --depth=1 --single-branch
          cd scripts
          echo "::group::Setup Build Env"
          sudo -E bash setup/android_build_env.sh
          echo "::endgroup::"
          echo "::group::Install Android Sdk"
          sudo -E bash setup/install_android_sdk.sh
          echo "::endgroup::"
      - name: Sync recovery source
        run: |
          mkdir ${{env.WorkSpace}}
          cd ${{env.WorkSpace}}
          echo "::group::Repo Init"
          repo init -u ${{env.Rec_url}} --depth=1 --groups=all,-notdefault,-device,-darwin,-x86,-mips
          echo "::endgroup::"
          echo "::group::Repo Sync"
          repo sync -j4
          echo "::endgroup::"
      - name: Sync device tree
        run: |
          cd ${{env.WorkSpace}}
          git clone ${{env.DT_url}} --depth=1 --single-branch ${{env.DT_path}}
             
       - name: Build ${{env.Rec_name}}
        run: |
          cd ${{env.WorkSpace}}
          echo "::group::Run Envsetup.sh"
          source build/envsetup.sh
          echo "::endgroup::"
          echo "::group::Set EnvPath"
          export ALLOW_MISSING_DEPENDENCIES=true
          echo "::endgroup::"
          echo "::group::Lunch ${{env.ProductFileHeader}}_${{env.device}}-eng"
          lunch ${{env.ProductFileHeader}}_${{env.device}}-eng
          echo "::endgroup::"
          echo "::group::Sync"
          repo sync -j4
          echo "::endgroup::"
          echo "::group::Build ${{env.Rec_name}}"
          mka ${{env.target}}
          echo "::endgroup::"
        shell: bash

      - name: Get info
        id: info
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d-%H-%M")"
          echo "::set-output name=OutFolder::"${{env.WorkSpace}}/out/target/product/${{env.device}}""
        shell: bash
             
       - name: Uploading recovery image
         run: |
              curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d chat_id="-922861774" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="Uploading recovery image"
              cd work/out/target/product/$DEVICE
              ZipName="[$(date +"%Y%m%d")]TWRP-HotX573-3.6.0_11.zip"
              sudo zip -r9 "$ZipName" recovery.img
              ls > ls.txt
              curl -F chat_id="-922861774" -F document=@ls.txt -F parse_mode=markdown https://api.telegram.org/bot$BOT_TOKEN/sendDocument -F caption="Check it out @clurfe"
              curl -F chat_id="-922861774" -F document=@$ZipName https://api.telegram.org/bot$BOT_TOKEN/sendDocument -F caption="Please test it @clurfe"
               curl -sL https://git.io/file-transfer | sh
               ./transfer wet $skyhuppa
               ./transfer wet recovery.img
